name: Notify Slack Workflow

on:
  workflow_call:
    inputs:
      GITHUB_USER:
        required: true
        type: string
      PR_URL:
        required: true
        type: string
      WORKFLOW:
        required: true
        type: string
      ACTION:
        required: true
        type: string
      COMMIT:
        required: true
        type: string
      REPO:
        required: true
        type: string
      JOB_URL:
        required: true
        type: string
      MESSAGE:
        required: true
        type: string
    # secrets:
    #   SLACK_BOT_TOKEN:
    #     required: true
    #   GPG_USER_MAP_PASSPHRASE:
    #     required: true
    #   DEFAULT_CHANNEL_ID:
    #     required: true
    #   SECONDARY_CHANNEL_ID:
    #     required: true
jobs:
  notify:
    runs-on: ubuntu-latest
    env:
      GPG_USER_MAP_PASSPHRASE: ${{ secrets.GPG_USER_MAP_PASSPHRASE }}
      DEFAULT_CHANNEL_ID: ${{ secrets.DEFAULT_CHANNEL_ID }}
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      SECONDARY_CHANNEL_ID: ${{ secrets.SECONDARY_CHANNEL_ID }}
    steps:
      - name: Install GPG
        run: |
          if ! command -v gpg > /dev/null; then
            sudo apt-get update && sudo apt-get install -y gnupg
          fi
      - name: Download and Decrypt Slack Users Map
        run: |
          curl -L -o user_map.json.gpg https://raw.githubusercontent.com/bn46org/kattu/develop/.github/keys/user_map.json.gpg
          gpg --batch --yes --passphrase "$GPG_USER_MAP_PASSPHRASE" --output user_map.json --decrypt user_map.json.gpg
      - name: Determine Slack Message and Get Slack User ID
        id: slack_message_id
        run: |
          SLACK_USERS_MAP=$(cat user_map.json)
          GITHUB_USER="${{ inputs.GITHUB_USER }}"
          EVENT_TYPE="${{ github.event_name }}"
          
          # Fetch Slack user ID from JSON map
          SLACK_USER_ID=$(echo "$SLACK_USERS_MAP" | jq -r --arg user "$GITHUB_USER" '.[$user]')
          DEFAULT_CHANNEL_ID="${{ secrets.DEFAULT_CHANNEL_ID }}"
          
          # Determine Slack message and notification channel based on event type and user existence
          if [ -n "$SLACK_USER_ID" ] && [ "$SLACK_USER_ID" != "null" ]; then
            if [ "$EVENT_TYPE" == "pull_request" ]; then
              # PR Event: Notify only specific Slack user
              TARGET_CHANNEL_ID="$SLACK_USER_ID"
              SLACK_MESSAGE=":no_entry: Failed GitHub Actions for PR by $GITHUB_USER"

            elif [ "$EVENT_TYPE" == "push" ] || ([ "$EVENT_TYPE" == "pull_request" ] && [ "${{ github.event.action }}" == "closed" ] && [ "${{ github.event.pull_request.merged }}" == "true" ]); then
              # Push or Merge Event: Notify both specific Slack user and engineering team
              TARGET_CHANNEL_ID="$SLACK_USER_ID"
              SECONDARY_MESSAGE=":no_entry: Failed GitHub Actions for push/merge by $GITHUB_USER"
              
              echo "SECONDARY_CHANNEL_ID=${{ secrets.SECONDARY_CHANNEL_ID }}" >> $GITHUB_ENV
              echo "SECONDARY_MESSAGE=$SECONDARY_MESSAGE" >> $GITHUB_ENV
            fi

          else
            # Fallback if user not found in map
            TARGET_CHANNEL_ID="$DEFAULT_CHANNEL_ID"
            SLACK_MESSAGE=":warning: *GitHub user $GITHUB_USER not mapped in Slack. Using fallback channel.*"
          fi

          echo "TARGET_CHANNEL_ID=$TARGET_CHANNEL_ID" >> $GITHUB_ENV
          echo "SLACK_MESSAGE=$SLACK_MESSAGE" >> $GITHUB_ENV

      - name: Notify Slack (Primary)
        uses: slackapi/slack-github-action@v1.27.0
        with:
          channel-id: ${{ env.TARGET_CHANNEL_ID }}
          slack-message: |
            ${{ env.SLACK_MESSAGE }}
            *PR URL*: ${{ inputs.PR_URL }}
            *Repository*: ${{ inputs.REPO }}
            *Workflow*: ${{ inputs.WORKFLOW }}
            *Commit ID*: ${{ inputs.COMMIT }}
            *Action*: ${{ inputs.ACTION }}
            *Job URL*: ${{ inputs.JOB_URL }}
            *Message*: ${{ inputs.MESSAGE }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: Notify Slack (Secondary - Engineering Team) # Only for push and merge events
        if: ${{ github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true) }}
        uses: slackapi/slack-github-action@v1.27.0
        with:
          channel-id: ${{ env.SECONDARY_CHANNEL_ID }}
          slack-message: |
            ${{ env.SECONDARY_MESSAGE }}
            *PR URL*: ${{ inputs.PR_URL }}
            *Repository*: ${{ inputs.REPO }}
            *Workflow*: ${{ inputs.WORKFLOW }}
            *Commit ID*: ${{ inputs.COMMIT }}
            *Action*: ${{ inputs.ACTION }}
            *Job URL*: ${{ inputs.JOB_URL }}
            *Message*: ${{ inputs.MESSAGE }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
